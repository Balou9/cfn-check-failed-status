name: ci

on:
  push:
    paths-inore:
    - "readme.md"

env:
  AWS_REGION: us-east-1

jobs:
  test-create-complete:
    runs-on: ubuntu-latest
    env:
      CFN_TEMPLATES: "./test/stacks/test-create-complete-stack.yml\n"
    steps:
      - name: clone the repo
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.5.3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: validates all cloudformation templates
        run: |
          printf "${{ env.CFN_TEMPLATES }}" | while read template; do
            aws cloudformation validate-template \
              --template-body="file://$template"
          done

      - name: map branch 2 test
        run: |
          echo "ENVIRONMENT=test" >> $GITHUB_ENV

      - name: configure the environment
        run: |
          echo "STACK_NAME=$ENVIRONMENT-create-complete-cfn-check-failed-status" >> $GITHUB_ENV
          echo "CFN_CHECK_STATUS_CREATE_COMPLETE_BUCKET_NAME=$ENVIRONMENT-create-complete-cfn-check-failed-status-bucket" >> $GITHUB_ENV

      - name: deploy the create-complete-cfn-check-failed-status stack to "force" CREATE_COMPLETE status
        run: |
          aws cloudformation deploy \
            --template-file="test/stacks/test-create-complete-stack.yml" \
            --stack-name=${{ env.STACK_NAME }} \
            --parameter-overrides \
              CfnCheckStatusBucketName=${{ env.CFN_CHECK_STATUS_CREATE_COMPLETE_BUCKET_NAME }} \
            --capabilities=CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset

      - name: test cfn-check-failed-status with a cloudformation stack in CREATE_COMPLETE status
        uses: ./
        id: checkstatus_create_complete
        with:
          cfn-stack-name: ${{ env.STACK_NAME }}

      - name: validate output message of the status check
        run: |
          echo "Stack status of the previous deployment of $env.STACK_NAME was ${{ steps.checkstatus_create_complete.outputs.message }}"

      - name: delete the create-complete-cfn-check-failed-status test stack
        run: |
          aws cloudformation delete-stack \
            --stack-name=${{ env.STACK_NAME }}

          aws s3 rb s3://${{ env.CFN_CHECK_STATUS_CREATE_COMPLETE_BUCKET_NAME }} --force

  test-create-failed:
    runs-on: ubuntu-latest
    needs: test-create-complete
    env:
      CFN_TEMPLATES: "./test/stacks/test-create-failed-stack.yml\n"
    steps:
      - name: clone the repo
        uses: actions/checkout@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.5.3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: validates all cloudformation templates
        run: |
          printf "${{ env.CFN_TEMPLATES }}" | while read template; do
            aws cloudformation validate-template \
              --template-body="file://$template"
          done

      - name: map branch 2 test
        run: |
          echo "ENVIRONMENT=test" >> $GITHUB_ENV

      - name: configure the environment
        run: |
          echo "STACK_NAME=$ENVIRONMENT-create-failed-cfn-check-failed-status" >> $GITHUB_ENV
          echo "CFN_CHECK_STATUS_CREATE_FAILED_BUCKET_NAME=$ENVIRONMENT-create-failed-cfn-check-failed-status-bucket" >> $GITHUB_ENV

      - name: creates bucket
        run: |
          aws s3api create-bucket \
          --acl="public-read" \
          --bucket=${{ env.CFN_CHECK_STATUS_CREATE_FAILED_BUCKET_NAME }}

      - name: deploy the create-failed-cfn-check-failed-status stack to force CREATE_FAILED status
        continue-on-error: true
        run: |
          aws cloudformation deploy \
            --template-file="test/stacks/test-create-failed-stack.yml" \
            --stack-name=${{ env.STACK_NAME }} \
            --parameter-overrides \
              CfnCheckStatusBucketName=${{ env.CFN_CHECK_STATUS_CREATE_FAILED_BUCKET_NAME }} \
            --capabilities=CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset

      - name: test cfn-check-failed-status with a cloudformation stack in CREATE_FAILED status
        uses: ./
        id: checkstatus_create_failed
        with:
          cfn-stack-name: ${{ env.STACK_NAME }}

      - name: validate output message of the status check
        run: |
          echo "Stack status of the previous deployment of $env.STACK_NAME was ${{ steps.checkstatus_create_failed.outputs.message }}"

      - name: delete the create-failed-cfn-check-failed-status test stack
        run: |
          aws cloudformation delete-stack \
            --stack-name=${{ env.STACK_NAME }}

          aws s3 rb s3://${{ env.CFN_CHECK_STATUS_CREATE_FAILED_BUCKET_NAME }} --force
